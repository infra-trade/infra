version: "3.8"
x-airflow-env: &airflow_env
  AIRFLOW__CORE__EXECUTOR: CeleryExecutor
  AIRFLOW__CORE__LOAD_EXAMPLES: "False"
  AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://trader:traderpass@10.20.0.21:5432/trading
  AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
  AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://trader:traderpass@10.20.0.21:5432/trading
  AIRFLOW__WEBSERVER__SECRET_KEY: cambialo

services:
  redis:
    image: redis:7
    volumes: ["/srv/iac/airflow/redis:/data"]
    restart: unless-stopped

  airflow-init:
    image: apache/airflow:2.9.3
    entrypoint: bash -lc "airflow db upgrade && airflow users create --username admin --password admin --firstname A --lastname D --role Admin --email admin@example.com || true"
    environment: *airflow_env
    volumes:
      - /srv/iac/airflow/dags:/opt/airflow/dags:ro
      - /srv/iac/airflow/plugins:/opt/airflow/plugins:ro
      - /srv/iac/airflow/logs:/opt/airflow/logs

  airflow-webserver:
    image: apache/airflow:2.9.3
    command: webserver
    environment: *airflow_env
    depends_on: [airflow-init, redis]
    volumes:
      - /srv/iac/airflow/dags:/opt/airflow/dags:ro
      - /srv/iac/airflow/plugins:/opt/airflow/plugins:ro
      - /srv/iac/airflow/logs:/opt/airflow/logs
    ports: ["8081:8080"]
    restart: unless-stopped

  airflow-scheduler:
    image: apache/airflow:2.9.3
    command: scheduler
    environment: *airflow_env
    depends_on: [airflow-init, redis]
    volumes:
      - /srv/iac/airflow/dags:/opt/airflow/dags:ro
      - /srv/iac/airflow/plugins:/opt/airflow/plugins:ro
      - /srv/iac/airflow/logs:/opt/airflow/logs
    restart: unless-stopped

  airflow-triggerer:
    image: apache/airflow:2.9.3
    command: triggerer
    environment: *airflow_env
    depends_on: [airflow-init, redis]
    volumes:
      - /srv/iac/airflow/dags:/opt/airflow/dags:ro
      - /srv/iac/airflow/plugins:/opt/airflow/plugins:ro
      - /srv/iac/airflow/logs:/opt/airflow/logs
    restart: unless-stopped

  airflow-worker:
    image: apache/airflow:2.9.3
    command: celery worker
    environment: *airflow_env
    depends_on: [airflow-scheduler, redis]
    volumes:
      - /srv/iac/airflow/dags:/opt/airflow/dags:ro
      - /srv/iac/airflow/plugins:/opt/airflow/plugins:ro
      - /srv/iac/airflow/logs:/opt/airflow/logs
    restart: unless-stopped