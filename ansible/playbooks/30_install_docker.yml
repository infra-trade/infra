---
- name: Install Docker Engine + compose on all VMs (Ubuntu 22.04+)
  hosts: core_vms
  become: true
  gather_facts: true

  vars:
    docker_repo_file: /etc/apt/sources.list.d/docker.list
    docker_keyring: /usr/share/keyrings/docker-archive-keyring.gpg
    docker_key_tmp: /tmp/docker.gpg.asc
    docker_key_url: https://download.docker.com/linux/ubuntu/gpg
    docker_packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin

  tasks:
    - name: Ensure prereqs (curl, gnupg, lsb-release, ca-certificates)
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    - name: Remove old docker keys in trusted.gpg.d (cleanup)
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/apt/trusted.gpg.d/docker.gpg
        - /etc/apt/trusted.gpg.d/docker.asc
        - /etc/apt/trusted.gpg.d/download.docker.com.gpg
      changed_when: false

    - name: Remove previous docker keyring (if any)
      file:
        path: "{{ docker_keyring }}"
        state: absent

    - name: Download Docker GPG (ASCII) to tmp
      get_url:
        url: "{{ docker_key_url }}"
        dest: "{{ docker_key_tmp }}"
        mode: "0644"

    - name: Convert Docker GPG to dearmored keyring
      command: >
        gpg --dearmor --yes --output {{ docker_keyring }} {{ docker_key_tmp }}

    - name: Set permissions on keyring
      file:
        path: "{{ docker_keyring }}"
        mode: "0644"
        owner: root
        group: root

    - name: Write Docker apt repo (jammy + signed-by)
      copy:
        dest: "{{ docker_repo_file }}"
        mode: "0644"
        content: |
          deb [arch=amd64 signed-by={{ docker_keyring }}] https://download.docker.com/linux/ubuntu jammy stable

    - name: Ensure timesync (helps apt signatures)
      apt:
        name: systemd-timesyncd
        state: present

    - name: Start & enable timesyncd
      systemd:
        name: systemd-timesyncd
        state: started
        enabled: true

    - name: apt-get update (refresh cache)
      apt:
        update_cache: yes

    - name: Install Docker Engine stack
      apt:
        name: "{{ docker_packages }}"
        state: present
        update_cache: yes

    - name: Enable & start docker
      systemd:
        name: docker
        state: started
        enabled: true

    - name: Add current SSH user to docker group if exists (ansible)
      user:
        name: ansible
        groups: docker
        append: true
      when: ansible_user is defined and ansible_user == "ansible"

    - name: Show docker and compose version
      shell: |
        set -e
        docker --version
        docker compose version || true
      register: docker_versions
      changed_when: false

    - debug:
        var: docker_versions.stdout_lines