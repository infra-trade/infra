---
- name: Create/Update Portainer stacks from Git (no loop on block)
  hosts: monitor
  gather_facts: false
  become: false

  vars:
    # URL del Portainer Server en mon-core
    portainer_url: "https://{{ hostvars[inventory_hostname].ansible_host | default(inventory_hostname) }}:9443"
    validate_certs: false

    # Token: toma del entorno PORTAINER_TOKEN o de var 'portainer_api_token' si existe
    portainer_api_token: "{{ lookup('env','PORTAINER_TOKEN') | default(portainer_api_token | default('', true), true) }}"

    # Stacks a gestionar (ajusta endpoint_id según tus Endpoints reales)
    stacks:
      - name: mon
        endpoint_id: 2
        repo_url: "git@github.com:infra-trade/infra.git"
        compose_path: "mon/compose/docker-compose.yml"
        git_ref: "main"
        env: []

      - name: airflow
        endpoint_id: 3
        repo_url: "git@github.com:infra-trade/infra.git"
        compose_path: "airflow/compose/docker-compose.yml"
        git_ref: "main"
        env: []

      - name: kafka
        endpoint_id: 4
        repo_url: "git@github.com:infra-trade/infra.git"
        compose_path: "kafka/compose/docker-compose.yml"
        git_ref: "main"
        env: []

      - name: spark
        endpoint_id: 5
        repo_url: "git@github.com:infra-trade/infra.git"
        compose_path: "spark/compose/docker-compose.yml"
        git_ref: "main"
        env: []

      - name: db
        endpoint_id: 6
        repo_url: "git@github.com:infra-trade/infra.git"
        compose_path: "db/compose/docker-compose.yml"
        git_ref: "main"
        env: []

  pre_tasks:
    - name: Fail if token is missing
      fail:
        msg: "Define PORTAINER_TOKEN en el entorno del controlador o variable 'portainer_api_token'."
      when: (portainer_api_token | length) == 0

    - name: Check Portainer is reachable
      uri:
        url: "{{ portainer_url }}/api/system/status"
        method: GET
        return_content: false
        validate_certs: "{{ validate_certs }}"
        status_code: 200
      register: _portainer_status

  tasks:
    - name: Create or update stack {{ stack.name }}
      include_tasks: "tasks/portainer_stack.yml"
      loop: "{{ stacks }}"
      loop_control:
        loop_var: stack
        label: "{{ stack.name }}"
      vars:
        # variables que consumirá tasks/portainer_stack.yml
        portainer_url: "{{ portainer_url }}"
        portainer_api_token: "{{ portainer_api_token }}"
        validate_certs: "{{ validate_certs }}"
        stack: "{{ stack }}"