---
# Create/Update Portainer stacks from Git (CE 2.33.2)
# Requiere que definas en group_vars o extra-vars:
# - portainer_url: "https://10.20.0.12:9443"
# - portainer_token: "<X-API-Key de Portainer>"
# - portainer_validate_certs: false
# - endpoints: { mon: 2, airflow: 3, kafka: 4, spark: 5, db: 6 }
# - stacks:  # ejemplo
#   - { name: "mon",     endpoint: "mon",     repo_url: "git@github.com:infra-trade/infra.git", compose_path: "mon/compose/docker-compose.yml",     git_ref: "main", env: [] }
#   - { name: "airflow", endpoint: "airflow", repo_url: "git@github.com:infra-trade/infra.git", compose_path: "airflow/compose/docker-compose.yml", git_ref: "main", env: [] }
#   - { name: "kafka",   endpoint: "kafka",   repo_url: "git@github.com:infra-trade/infra.git", compose_path: "kafka/compose/docker-compose.yml",   git_ref: "main", env: [] }
#   - { name: "spark",   endpoint: "spark",   repo_url: "git@github.com:infra-trade/infra.git", compose_path: "spark/compose/docker-compose.yml",   git_ref: "main", env: [] }
#   - { name: "db",      endpoint: "db",      repo_url: "git@github.com:infra-trade/infra.git", compose_path: "db/compose/docker-compose.yml",      git_ref: "main", env: [] }
#
# Opcional para repos privados por SSH:
# - github_deploy_key: "/home/ansible/.ssh/github_deploy"

- name: Create/Update Portainer stacks from Git (CE 2.33.2)
  hosts: mon-core
  become: false
  gather_facts: false

  vars:
    portainer_validate_certs: "{{ portainer_validate_certs | default(false) }}"

  pre_tasks:
    - name: Resolver token (env primero, si no existe usa var portainer_token)
      ansible.builtin.set_fact:
        portainer_api_token: "{{ lookup('env','PORTAINER_TOKEN') | default(portainer_token | default('', true), true) }}"

    - name: Fallar si no hay token
      ansible.builtin.fail:
        msg: "Falta X-API-Key (PORTAINER_TOKEN o var portainer_token)"
      when: portainer_api_token | length == 0

    - name: Verificar que existan variables requeridas
      ansible.builtin.assert:
        that:
          - portainer_url is defined
          - endpoints is defined
          - stacks is defined
        success_msg: "Variables b√°sicas presentes."
        fail_msg: "Faltan variables: portainer_url / endpoints / stacks"

    - name: Verificar conectividad con Portainer
      ansible.builtin.uri:
        url: "{{ portainer_url }}/api/system/status"
        method: GET
        headers:
          X-API-Key: "{{ portainer_api_token }}"
        validate_certs: "{{ portainer_validate_certs }}"
        status_code: 200
      register: _status

  tasks:
    - name: Crear/actualizar cada stack
      ansible.builtin.include_tasks: "tasks/portainer_stack.yml"
      loop: "{{ stacks }}"
      loop_control:
        loop_var: st