---
- name: Create/Update Portainer stacks from Git (no loop on block)
  hosts: monitor
  gather_facts: false
  become: false

  vars:
    portainer_url: "https://{{ hostvars[inventory_hostname].ansible_host | default(inventory_hostname) }}:9443"
    validate_certs: false

    endpoints:
      mon: 2
      airflow: 3
      kafka: 4
      spark: 5
      db: 6

    stacks:
      - name: mon
        endpoint: mon
        repo_url: "git@github.com:infra-trade/infra.git"
        compose_path: "mon/compose/docker-compose.yml"
        git_ref: "main"
        env: []
      - name: airflow
        endpoint: airflow
        repo_url: "git@github.com:infra-trade/infra.git"
        compose_path: "airflow/compose/docker-compose.yml"
        git_ref: "main"
        env: []
      - name: kafka
        endpoint: kafka
        repo_url: "git@github.com:infra-trade/infra.git"
        compose_path: "kafka/compose/docker-compose.yml"
        git_ref: "main"
        env: []
      - name: spark
        endpoint: spark
        repo_url: "git@github.com:infra-trade/infra.git"
        compose_path: "spark/compose/docker-compose.yml"
        git_ref: "main"
        env: []
      - name: db
        endpoint: db
        repo_url: "git@github.com:infra-trade/infra.git"
        compose_path: "db/compose/docker-compose.yml"
        git_ref: "main"
        env: []

  pre_tasks:
    - name: Resolver token (env primero, si no existe usa var portainer_token)
      ansible.builtin.set_fact:
        portainer_api_token: >-
          {{
            (lookup('env','PORTAINER_TOKEN'))
            if (lookup('env','PORTAINER_TOKEN') | length) > 0
            else (portainer_token | default(''))
          }}

    - name: Fallar si no hay token
      ansible.builtin.fail:
        msg: "Define PORTAINER_TOKEN (export) o variable 'portainer_token' en group_vars."
      when: portainer_api_token | length == 0

    - name: Verificar conectividad con Portainer
      ansible.builtin.uri:
        url: "{{ portainer_url }}/api/system/status"
        method: GET
        validate_certs: "{{ validate_certs }}"
        return_content: false
        status_code: 200

  tasks:
    - name: Crear/actualizar cada stack
      include_tasks: "tasks/portainer_stack.yml"
      loop: "{{ stacks }}"
      loop_control:
        loop_var: item_stack
        label: "{{ item_stack.name }}"
      vars:
        st: "{{ item_stack }}"
        endp_map: "{{ endpoints }}"   # ðŸ‘ˆ Ãºnico var pasado