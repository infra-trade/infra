---
- name: Crecer partición/FS de / dentro de las VMs (y liberar un poco de espacio)
  hosts: airflow-core:kafka-core:spark-core:db-core:mon-core
  gather_facts: false
  become: true

  vars:
    min_free_mb: 300   # solo para asegurar algo de margen

  tasks:
    # --- Medición inicial y limpieza ligera (por si vamos muy justos) ---
    - name: MB libres iniciales en /
      raw: "df -Pm / | awk 'NR==2{print $4}'"
      register: free0

    - name: Mostrar libre inicial
      debug:
        msg: "Libre inicial en /: {{ free0.stdout | trim }} MB"

    - name: Parar servicios pesados (best effort)
      raw: |
        systemctl stop docker 2>/dev/null || true
        systemctl stop containerd 2>/dev/null || true

    - name: Limpiar locks/listas/cachés APT (sin módulos)
      raw: |
        rm -f /var/lib/dpkg/lock-frontend /var/lib/dpkg/lock /var/cache/apt/archives/lock
        rm -rf /var/lib/apt/lists/*
        apt-get clean || true

    - name: Vaciar journals/logs grandes (best effort)
      raw: |
        journalctl --vacuum-time=1d 2>/dev/null || true
        find /var/log -type f -size +10M -exec truncate -s 0 {} \; 2>/dev/null || true
        rm -rf /tmp/* /var/tmp/* 2>/dev/null || true

    - name: Reconf dpkg si quedó a medias (best effort)
      raw: "dpkg --configure -a || true"

    - name: MB libres tras limpieza
      raw: "df -Pm / | awk 'NR==2{print $4}'"
      register: free1

    - name: Asegurar mínimo de espacio antes de seguir
      assert:
        that:
          - (free1.stdout | int) >= min_free_mb
        fail_msg: "Sigue habiendo muy poco espacio (< {{ min_free_mb }}MB). Amplía el disco en Proxmox y reintenta."
        success_msg: "Espacio mínimo asegurado: {{ free1.stdout | int }} MB."

    # --- Detección de raíz y FS ---
    - name: Detectar dispositivo y FS de /
      raw: "findmnt -no SOURCE,FSTYPE /"
      register: root_info

    - name: Normalizar variables de raíz
      set_fact:
        ROOT_SOURCE: "{{ (root_info.stdout | trim).split(' ')[0] }}"
        ROOT_FSTYPE: "{{ (root_info.stdout | trim).split(' ')[1] | lower }}"

    - name: DEBUG raíz
      debug:
        msg:
          - "ROOT_SOURCE={{ ROOT_SOURCE }}"
          - "ROOT_FSTYPE={{ ROOT_FSTYPE }}"

    # --- Ramas de crecimiento ---
    # LVM: crecer PV, luego LV y FS
    - block:
        - name: Detectar disco físico de PV (LVM)
          raw: "pvs --noheadings -o pv_name | awk 'NF{print $1; exit}'"
          register: pv_dev

        - name: Ampliar PV (pvresize)
          when: pv_dev.stdout is search('^/dev/')
          raw: "pvresize {{ pv_dev.stdout | trim }}"

        - name: Detectar VG/LV de /
          raw: "df -PTh | awk '$7==\"/\"{print $1}'"
          register: lv_path

        - name: Extender LV al 100%FREE
          when: lv_path.stdout is search('^/dev/')
          raw: "lvextend -r -l +100%FREE {{ lv_path.stdout | trim }}"
      when: ROOT_SOURCE is match('^/dev/mapper/')

    # NO-LVM: partición directa (/dev/sda1 /dev/vda1, etc.)
    - block:
        - name: Extraer disco base y número de partición (NO-LVM)
          set_fact:
            PART_PATH: "{{ ROOT_SOURCE }}"
            DISK_PATH: "{{ ROOT_SOURCE | regex_replace('[0-9]+$','') }}"
            PART_NUM:  "{{ ROOT_SOURCE | regex_search('[0-9]+$') }}"

        - name: Tamaños de disco y partición (bytes)
          raw: |
            echo -n "disk="; lsblk -bno SIZE {{ DISK_PATH }}
            echo -n "part="; lsblk -bno SIZE {{ PART_PATH }}
          register: sizes_raw

        - name: Parsear tamaños
          set_fact:
            DISK_SIZE_B: "{{ (sizes_raw.stdout_lines | select('search','^disk=') | list | first).split('=')[1] | int }}"
            PART_SIZE_B: "{{ (sizes_raw.stdout_lines | select('search','^part=') | list | first).split('=')[1] | int }}"

        - name: DEBUG tamaños
          debug:
            msg:
              - "DISK_SIZE_B={{ DISK_SIZE_B }}"
              - "PART_SIZE_B={{ PART_SIZE_B }}"

        - name: Intentar growpart si hay espacio al final
          when: DISK_SIZE_B > PART_SIZE_B
          raw: |
            command -v growpart >/dev/null 2>&1 || (apt-get update -o Acquire::ForceIPv4=true && DEBIAN_FRONTEND=noninteractive apt-get install -y cloud-guest-utils)
            growpart {{ DISK_PATH }} {{ PART_NUM }}

        - name: Recalcular tamaño de partición (post-growpart)
          raw: "lsblk -bno SIZE {{ PART_PATH }}"
          register: part_after

        - name: DEBUG tamaño partición actual
          debug:
            msg: "PART_SIZE_B_AFTER={{ (part_after.stdout | trim | int) }}"

        - name: Crecer filesystem ext4
          when: ROOT_FSTYPE == "ext4"
          raw: "resize2fs {{ PART_PATH }}"

        - name: Crecer filesystem XFS
          when: ROOT_FSTYPE == "xfs"
          raw: "xfs_growfs /"
      when: ROOT_SOURCE is match('^/dev/[sv]d[a-z]*[0-9]+')

    - name: MB libres finales en /
      raw: "df -Pm / | awk 'NR==2{print $4}'"
      register: free_end

    - name: Resumen
      debug:
        msg:
          - "Libre final en /: {{ free_end.stdout | trim }} MB"
          - "Si no aumentó y PART_SIZE_B==DISK_SIZE_B, primero amplía el disco en Proxmox (play 14) y reejecuta este play."